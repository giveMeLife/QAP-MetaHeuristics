data = rbind(data, aux)
}
data = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", metaheuristic, ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux$met = metaheuristic
data = rbind(data, aux)
}
data = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", metaheuristic, ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
data = rbind(data, aux)
}
View(data)
data$V3 = as.numeric(gsub(",", ".", data$V3))
data$V2 = as.numeric(gsub(",", ".", data$V2))
ev = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", "evolutive", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
ev = rbind(ev, aux)
}
sa = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
data = rbind(ev, sa)
ev = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", "evolutive", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
ev = rbind(ev, aux)
}
ev$met = "Evolutive"
sa = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
sa$met = "Simulated Annealing"
data = rbind(ev, sa)
data$V3 = as.numeric(gsub(",", ".", data$V3))
data$V2 = as.numeric(gsub(",", ".", data$V2))
ggboxplot(data = data, "met", "V2", add = "jitter")
ggboxplot(data = data, "met", "V3", add = "jitter")
file = "esc64a.txt"
ev = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", "evolutive", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
ev = rbind(ev, aux)
}
ev$met = "Evolutive"
sa = data.frame()
for (i in 1:11) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
sa$met = "Simulated Annealing"
data = rbind(ev, sa)
data$V3 = as.numeric(gsub(",", ".", data$V3))
data$V2 = as.numeric(gsub(",", ".", data$V2))
ggboxplot(data = data, "met", "V3", add = "jitter")
library("ggpubr")
file = "esc64a.txt"
ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "evolutive", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
ev = rbind(ev, aux)
}
ev$met = "Evolutive"
sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "evolutive", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
ev = rbind(ev, aux)
}
ev$met = "Evolutive"
sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
sa$met = "Simulated Annealing"
data = rbind(ev, sa)
data$V3 = as.numeric(gsub(",", ".", data$V3))
data$V2 = as.numeric(gsub(",", ".", data$V2))
ggboxplot(data = data, "met", "V3", add = "jitter")
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter")
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter")
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter")
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "")
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "")
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter")
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter") %>%
ggexport(filename = paste0("plots/", file, "_time.png"), width = 500, height = 500)
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "") %>%
ggexport(filename = paste0("plots/", file, "_solution.png"), width = 500, height = 500)
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter") %>%
ggexport(filename = paste0("plots/", file, "_time.png"), width = 500, height = 400)
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "") %>%
ggexport(filename = paste0("plots/", file, "_solution.png"), width = 500, height = 400)
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "") %>%
ggexport(filename = paste0("plots/", file, "_time.png"), width = 500, height = 400)
file = "bur26a.dat"
ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "evolutive", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
ev = rbind(ev, aux)
}
ev$met = "Evolutive"
sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/results/", file, "_", i, "_", "SA", ".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
sa = rbind(sa, aux)
}
sa$met = "Simulated Annealing"
data = rbind(ev, sa)
data$V3 = as.numeric(gsub(",", ".", data$V3))
data$V2 = as.numeric(gsub(",", ".", data$V2))
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "") %>%
ggexport(filename = paste0("plots/", file, "_time.png"), width = 500, height = 400)
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "") %>%
ggexport(filename = paste0("plots/", file, "_solution.png"), width = 500, height = 400)
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
data = rbind(ev, sa)
data$V3 = as.numeric(gsub(",", ".", data$V3))
data$V2 = as.numeric(gsub(",", ".", data$V2))
ggboxplot(data = data,
"met",
"V3",
ylab = "Tiempo (minutos)",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "",
title = paste(file, "101 ejecuciones")) %>%
ggexport(filename = paste0("plots/", file, "_time.png"), width = 500, height = 400)
ggboxplot(data = data,
"met",
"V2",
ylab = "Solución óptima",
xlab = "Metaheurística",
color = "met",
add = "jitter",
legend.title = "",
title = paste(file, "101 ejecuciones")) %>%
ggexport(filename = paste0("plots/", file, "_solution.png"), width = 500, height = 400)
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
data
data$V2
min(data$V2)
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
bests.sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
bests.sa = rbind(sa, aux)
}
bests.sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
bests.sa = rbind(bests.sa, aux)
}
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
View(bests.sa)
aux
ts.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
bests.sa = cbind(bests.sa, aux)
}
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
bests.sa = rbind(bests.sa, aux)
}
bests.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:]
bests.sa = rbind(bests.sa, aux)
}
aux = aux[:210]
bests.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[1:length(aux)]
bests.sa = rbind(bests.sa, aux)
}
bests.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[1:length(aux)]
#bests.sa = rbind(bests.sa, aux)
}
bests.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
#bests.sa = rbind(bests.sa, aux)
}
bests.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
print(length(aux))
#bests.sa = rbind(bests.sa, aux)
}
bests.sa = c()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
bests.sa = rbind(bests.sa, aux)
}
warnings()
bests.sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
bests.sa = rbind(bests.sa, aux)
}
bests.sa = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = i
bests.sa = rbind(bests.sa, df)
}
View(bests.sa)
ggscatter(bests.sa,
x = "x",
y = "aux",
color = "sol")
bests.ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/evolutive_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = i
bests.ev = rbind(bests.ev, df)
}
ggscatter(bests.ev,
x = "x",
y = "aux",
color = "sol")
bests.ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/evolutive_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = as.factor(i)
bests.ev = rbind(bests.ev, df)
}
ggscatter(bests.ev,
x = "x",
y = "aux",
color = "sol")
ggscatter(bests.ev,
x = "x",
y = "aux",
color = "sol",
legend=F)
bests.ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/evolutive_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = i
bests.ev = rbind(bests.ev, df)
}
bests.ev = data.frame()
for (i in 1:101) {
my_file = paste0("output/bests/evolutive_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = i
bests.ev = rbind(bests.ev, df)
}
ggscatter(bests.ev,
x = "x",
y = "aux",
color = "sol")
data$V2
min(data$V2)
data[data$V2 == min(data$V2)]
data[data$V2 == min(data$V2), ]
which(data, [data$V2 == min(data$V2), ]
which(data, [data$V2 == min(data$V2), ])
which(data, data$V2 == min(data$V2))
which(data)
which.min(data$V2)
which.min(data$V3)
which.min(data$V2)
which.min(ev$V2)
ev
min(ev$V2)
ev$V3 = as.numeric(gsub(",", ".", ev$V3))
which.min(ev$V3)
bests.ev = data.frame()
for (i in 66) {
my_file = paste0("output/bests/evolutive_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = i
bests.ev = rbind(bests.ev, df)
}
ggscatter(bests.ev,
x = "x",
y = "aux",
color = "sol")
sa$V3 = as.numeric(gsub(",", ".", sa$V3))
which.min(sa$V3)
bests.sa = data.frame()
for (i in 68) {
my_file = paste0("output/bests/sa_", file, "_", i,".csv")
aux = t(read.table(my_file, sep = ";", dec = "."))
aux = aux[2:length(aux)]
aux = as.numeric(gsub(",", ".", aux))
x = c(1:length(aux))
df = data.frame(aux, x)
df$sol = i
bests.sa = rbind(bests.sa, df)
}
ggscatter(bests.sa,
x = "x",
y = "aux",
color = "sol")
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
a = Sys.time()
a
a
a
a
a
a
a - Sys.time()
a - Sys.time()
a - Sys.time()
a - Sys.time()
a - Sys.time()
a - Sys.time()
a - Sys.time()
a - Sys.time()
Sys.time() -a
Sys.time() -a
d = Sys.time() -a
d
as.numeric(d, units = "secs")
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
source('~/Desktop/Universidad/QAP-MetaHeuristics/analysis.R')
